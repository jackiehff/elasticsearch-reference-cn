[[cluster-reroute]]
== 集群重路由

重路由命令允许显示地执行一个一个集群重路由分配命令, 包括特定的命令. 例如, 分片可以显示地从一个节点移动到另一个节点, 分配可以被取消, 或者一个未分配的分片可以显示地被分配到一个特定的节点上.

下面是一个简单的重路由API如何调用的简短示例:

[source,js]
--------------------------------------------------
curl -XPOST 'localhost:9200/_cluster/reroute' -d '{
    "commands" : [ {
        "move" :
            {
              "index" : "test", "shard" : 0,
              "from_node" : "node1", "to_node" : "node2"
            }
        },
        {
          "allocate" : {
              "index" : "test", "shard" : 1, "node" : "node3"
          }
        }
    ]
}'
--------------------------------------------------

一个要记住的很重要的方面是一旦当分配发生时, 集群将会旨在重新平衡它的状态回到一个 even 状态. 例如, 如果分配包括从 `node1` 移动一个分片到 `node2`, 在一个 `even` 状态,
那么另一个分片将会从 `node2` 移动到 `node1` 到 to even things out.

集群可以设置禁用分配, 这意味着只有显示的分配才会被执行. 很显然地, 只有一旦所有命令被应用, 集群将计划重新平衡它的状态.

另一个选项是在 `dry_run` 中运行这个命令 (作为一个 URI 标识, 或者在请求体中). 这将导致命令应用到当前的集群状态, 并且在应用命令 (以及重新平衡) 之后生成的集群返回.

如果指定了 `explain` 参数, 将返回关于为什么命令可以或不可以被执行的一个详细的解释.

支持的命令有:

`move`::
    将一个已启动的分片从一个节点移动到另一个节点. 对于索引名称和分片数量接受 `index` 和 `shard` , `from_node` 指定分片从哪个节点移动出来的, 以及 `to_node` 指定分片要移动到的节点.

`cancel`::
    取消分片的分配 (或恢复). 对于索引名称和分片数量接受 `index` 和 `shard`, 以及 `node` 指定取消分片分配所在的节点. 它还接受 `allow_primary` 标识
    来显示地指定它允许为一个主分片取消分配. 这可以用来强制从主分片重新同步已存在的副本, 通过取消它们以及允许它们通过标准的重新分配过程重新初始化.

`allocate`::
    给节点分配一个未分配的分片. 对于索引名称和分片数量接受 `index` 和 `shard` , 以及 `node` 来分配分片到的节点. 它还接受 `allow_primary` 标识来显示地指定它可以被允许显示地分配一个主分片 (可能会导致数据丢失).

WARNING: `allow_primary` 参数将强制分配一个 *没有任何数据* 的新的 _empty_ 主分片. 如果一个有原始主分片 (包括数据) 的一个副本的节点后来重新加入到集群中, 那么数据将会被删除: 原来的分片副本将会被新生的分片副本所替代.
