[[cluster-health]]
== 集群健康

集群健康 API 允许获取一个非常简单的集群健康状态.

[source,js]
--------------------------------------------------
$ curl -XGET 'http://localhost:9200/_cluster/health?pretty=true'
{
  "cluster_name" : "testcluster",
  "status" : "green",
  "timed_out" : false,
  "number_of_nodes" : 2,
  "number_of_data_nodes" : 2,
  "active_primary_shards" : 5,
  "active_shards" : 10,
  "relocating_shards" : 0,
  "initializing_shards" : 0,
  "unassigned_shards" : 0,
  "delayed_unassigned_shards": 0,
  "number_of_pending_tasks" : 0,
  "number_of_in_flight_fetch": 0,
  "task_max_waiting_in_queue_millis": 0,
  "active_shards_percent_as_number": 100
}
--------------------------------------------------

该 API 也可以执行于一个或多个索引来获取指定索引的健康状态:

[source,js]
--------------------------------------------------
$ curl -XGET 'http://localhost:9200/_cluster/health/test1,test2'
--------------------------------------------------

集群健康状态是: `green`, `yellow` 或 `red`. 在分片级别, `red` 状态表明指定的分片还没有在集群中分配, `yellow` 意味着主分片已经被分配但是副本还没有, 而 `green` 意味着所有的分片都已经被分配. 索引级别的状态由最坏的分片状态决定. 集群的状态由最坏的索引状态决定.

这个API其中的一个主要好处是能够等待, 直到集群到达某个高水准的健康级别. 例如, 下面的示例将会等待集群到达 `yellow` 级别50s (如果在50s过去之前它到达 `green` 或 `yellow` 状态, 它会即刻返回):

[source,js]
--------------------------------------------------
$ curl -XGET 'http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=50s'
--------------------------------------------------

[float]
[[request-params]]
=== 请求参数

集群健康API接受下面的请求参数:

`level`::
    可以是 `cluster`, `indices` 或 `shards` 其中之一. 控制返回的健康信息的详细级别. 默认值是 `cluster`.

`wait_for_status`::
    `green`, `yellow` 或 `red` 其中之一. 在集群的状态改变为提供的一个状态或者比提供的状态更好的一个状态之前一直等待 (直到提供的超时时间) , 例如, `green` > `yellow` > `red`. 默认不会等待任何状态.

`wait_for_relocating_shards`::
    控制重新定位的分片等待数量. 通常会是 `0` 来表明等待直到所有的重新定位已经开始. 默认值是不等待.

`wait_for_active_shards`::
    控制活动分片等待数量. 默认值是不等待.

`wait_for_nodes`::
    请求一直等待直到可用的节点数量达到指定的 `N` . 它还接受 `>=N`, `<=N`, `>N` 和 `<N`.
    或者, 也可以使用 `ge(N)`, `le(N)`, `gt(N)` 和 `lt(N)` 表示法.

`timeout`::
    一个基于时间的参数, 它用来控制等待的时间, 如果提供了 wait_for_XXX 其中之一的话. 默认值是 `30s`.


下面的示例在 `shards` 级别获取集群健康状态:

[source,js]
--------------------------------------------------
$ curl -XGET 'http://localhost:9200/_cluster/health/twitter?level=shards'
--------------------------------------------------
